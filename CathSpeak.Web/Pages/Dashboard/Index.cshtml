@page
@model CathSpeak.Web.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="dashboard-main">
    <!-- Sidebar navigation - visible on desktop -->
    <div class="dashboard-sidebar">
        <div class="user-profile">
            <div class="user-avatar">
                <img src="/images/default-avatar.png" alt="@User.Identity?.Name" />
            </div>
            <div class="user-info">
                <span class="user-name">@User.Identity?.Name</span>
                <span class="user-level">HSK3</span>
            </div>
        </div>
        
        <div class="sidebar-section">
            <h3>ROOM</h3>
            <a href="/VideoChat/OneOnOne" class="sidebar-btn">
                RANDOM 1-1
            </a>
            <a href="/VideoChat/Room" class="sidebar-btn">
                CREATE ROOM
            </a>
            
            <div class="toggle-container">
                <label class="toggle-switch">
                    <input type="checkbox" checked>
                    <span class="toggle-slider"></span>
                </label>
                <span class="toggle-label">Enable to expand your connection with international friends.</span>
            </div>
        </div>
        
        <div class="sidebar-bottom">
            <a href="/Settings" class="bottom-link">
                <i class="fas fa-cog"></i> Setting
            </a>
            <a href="/Auth/Logout" class="bottom-link">
                <i class="fas fa-sign-out-alt"></i> Log out
            </a>
        </div>
    </div>

    <!-- Main content area -->
    <div class="dashboard-content">
        <!-- Top navigation bar -->
        <div class="dashboard-topbar">
            <div class="logo-container">
                <img src="/images/logo-white.svg" alt="CathSpeak Logo" class="dashboard-logo" />
                <span>Cath</span>
            </div>
            
            <div class="search-container">
                <input type="text" placeholder="Searching..." class="search-input" />
                <button class="search-button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
            
            <div class="notification-container">
                <button class="notification-button">
                    <i class="fas fa-bell"></i>
                </button>
            </div>
        </div>

        <!-- Banner section -->
        <div class="banner-section">
            <div class="banner-content">
                <h2>Video Chat Center</h2>
            </div>
            <div class="banner-indicators">
                <span class="indicator active"></span>
                <span class="indicator"></span>
            </div>
        </div>

        <!-- Room grid -->
        <div class="room-grid-container">
            <h2>Available Rooms</h2>
            
            <div class="room-grid">
                @if (Model.Rooms.Any())
                {
                    @foreach (var room in Model.Rooms)
                    {
                        <div class="room-card">
                            <div class="room-header">
                                <h3>@room.Name</h3>
                                <button class="room-options">
                                    <i class="fas fa-ellipsis-h"></i>
                                </button>
                            </div>
                            <div class="room-content">
                                <div class="room-status active"></div>
                                <div class="room-avatar">
                                    <img src="/img/hsk4.png" alt="Room Owner" />
                                    <div class="room-avatar-label">SOMEBODY</div>
                                </div>
                            </div>
                            <div class="room-footer">
                                <div class="room-capacity">2/5</div>
                                <div class="room-time">18:30 - 19:30</div>
                            </div>
                        </div>
                    }
                }
                
                <!-- Sample rooms to fill grid if not enough actual rooms -->
                @if (!Model.Rooms.Any() || Model.Rooms.Count < 4)
                {
                    <div class="room-card">
                        <div class="room-header">
                            <h3>History</h3>
                            <button class="room-options">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                        </div>
                        <div class="room-content">
                            <div class="room-status active"></div>
                            <div class="room-avatar">
                                <img src="/images/default-avatar.png" alt="Room Owner" />
                                <div class="room-avatar-label">SOMEBODY</div>
                            </div>
                        </div>
                        <div class="room-footer">
                            <div class="room-capacity">2/5</div>
                            <div class="room-time">18:30 - 19:30</div>
                        </div>
                    </div>
                    
                    <div class="room-card">
                        <div class="room-header">
                            <h3>HSK1</h3>
                            <button class="room-options">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                        </div>
                        <div class="room-content">
                            <div class="room-status active"></div>
                            <div class="room-avatar">
                                <img src="/images/default-avatar.png" alt="Room Owner" />
                                <div class="room-avatar-label">SOMEBODY</div>
                            </div>
                        </div>
                        <div class="room-footer">
                            <div class="room-capacity">2/5</div>
                            <div class="room-time">18:30 - 19:30</div>
                        </div>
                    </div>
                }
            </div>
            
            <div class="room-total">Total rooms: @(Model.Rooms.Count > 0 ? Model.Rooms.Count : 200)</div>
        </div>

        <!-- Friends section -->
        <div class="section-container">
            <h2>Friends</h2>
            <div class="friends-grid">
                @if (Model.Friends.Any())
                {
                    @foreach (var friend in Model.Friends.Take(6))
                    {
                        <div class="friend-card">
                            <img src="@(friend.AvatarImageUrl ?? "/images/default-avatar.png")" alt="@friend.Username" class="friend-avatar" />
                            <span class="friend-name">@friend.Username</span>
                        </div>
                    }
                }
                else
                {
                    <p class="empty-state">No friends yet. <a href="/Friends/Search">Find friends</a></p>
                }
            </div>
            @if (Model.Friends.Count > 6)
            {
                <a href="/Friends" class="view-all">View all friends</a>
            }
        </div>

        <!-- Recent conversations -->
        <div class="section-container">
            <h2>Recent Conversations</h2>
            <div class="conversations-list">
                @if (Model.Conversations.Any())
                {
                    @foreach (var conversation in Model.Conversations.Take(5))
                    {
                        <div class="conversation-card">
                            <img src="@(conversation.Friend.AvatarImageUrl ?? "/images/default-avatar.png")" alt="@conversation.Friend.Username" class="conversation-avatar" />
                            <div class="conversation-info">
                                <span class="conversation-name">@conversation.Friend.Username</span>
                                <span class="conversation-message">@conversation.LastMessage</span>
                            </div>
                            <a href="/Chat/Conversation/@conversation.ConversationId" class="conversation-action">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <p class="empty-state">No conversations yet. Start chatting with friends!</p>
                }
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary: #A60E13;
        --primary-dark: #8B0000;
        --primary-light: #D41E24;
        --accent: #FFD700;
        --text-light: #FFFFFF;
        --text-dark: #333333;
        --gray-light: #E1E5E9;
        --gray-medium: #A0A0A0;
        --gray-dark: #666666;
        --success: #4CAF50;
        --danger: #F44336;
        --warning: #FFC107;
    }

    body {
        margin: 0;
        padding: 0;
        font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, sans-serif;
        background-color: var(--primary);
        color: var(--text-light);
    }

    .dashboard-main {
        display: flex;
        min-height: 100vh;
    }

    /* Sidebar styles */
    .dashboard-sidebar {
        width: 240px;
        background-color: white;
        color: var(--text-dark);
        display: flex;
        flex-direction: column;
        padding: 20px;
        box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        position: relative;
    }

    .user-profile {
        display: flex;
        align-items: center;
        padding: 15px;
        border: 1px solid var(--gray-light);
        border-radius: 12px;
        margin-bottom: 20px;
    }

    .user-avatar img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        object-fit: cover;
    }

    .user-info {
        margin-left: 12px;
    }

    .user-name {
        display: block;
        font-weight: 500;
        font-size: 14px;
    }

    .user-level {
        display: block;
        color: #FFA500;
        font-weight: 600;
        font-size: 16px;
    }

    .sidebar-section {
        margin-bottom: 30px;
    }

    .sidebar-section h3 {
        color: #770000;
        font-weight: 700;
        margin-bottom: 15px;
        font-size: 18px;
    }

    .sidebar-btn {
        display: block;
        background-color: #FFA500;
        color: var(--text-dark);
        text-align: center;
        padding: 12px;
        border-radius: 25px;
        margin-bottom: 12px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .sidebar-btn:hover {
        background-color: #FF8C00;
    }

    .toggle-container {
        display: flex;
        flex-direction: column;
        margin-top: 15px;
    }

    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 24px;
        margin-bottom: 10px;
    }

    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 24px;
    }

    .toggle-slider:before {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        transition: .4s;
        border-radius: 50%;
    }

    input:checked + .toggle-slider {
        background-color: var(--success);
    }

    input:checked + .toggle-slider:before {
        transform: translateX(26px);
    }

    .toggle-label {
        font-size: 12px;
        color: var(--text-dark);
        line-height: 1.4;
    }

    .sidebar-bottom {
        margin-top: auto;
    }

    .bottom-link {
        display: flex;
        align-items: center;
        color: var(--text-dark);
        text-decoration: none;
        padding: 10px 0;
        font-size: 16px;
        font-weight: 500;
    }

    .bottom-link i {
        margin-right: 10px;
        width: 20px;
    }

    /* Main content area */
    .dashboard-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
    }

    /* Top bar */
    .dashboard-topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 30px;
    }

    .logo-container {
        display: flex;
        align-items: center;
    }

    .dashboard-logo {
        height: 40px;
        margin-right: 8px;
    }

    .logo-container span {
        font-size: 24px;
        font-weight: 600;
    }

    .search-container {
        display: flex;
        flex: 1;
        max-width: 500px;
        margin: 0 20px;
    }

    .search-input {
        flex: 1;
        padding: 10px 15px;
        border: none;
        border-radius: 5px 0 0 5px;
        font-size: 14px;
    }

    .search-button {
        background-color: white;
        border: none;
        border-radius: 0 5px 5px 0;
        padding: 0 15px;
        cursor: pointer;
    }

    .notification-button {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
    }

    /* Banner section */
    .banner-section {
        position: relative;
        margin: 10px 30px;
        border-radius: 10px;
        overflow: hidden;
        height: 150px;
        background-image: url('/images/banner-bg.jpg');
        background-size: cover;
        background-position: center;
    }

    .banner-content {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0 30px;
        background: rgba(0, 0, 0, 0.4);
    }

    .banner-content h2 {
        margin: 0;
        font-size: 24px;
        font-weight: 600;
    }

    .banner-indicators {
        position: absolute;
        bottom: 15px;
        left: 0;
        width: 100%;
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.5);
    }

    .indicator.active {
        background-color: white;
    }

    /* Room grid */
    .room-grid-container {
        padding: 20px 30px;
    }

    .room-grid-container h2 {
        margin-bottom: 20px;
        font-size: 22px;
        font-weight: 500;
    }

    .room-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 15px;
    }

    .room-card {
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        color: var(--text-dark);
    }

    .room-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 15px;
        border-bottom: 1px solid var(--gray-light);
    }

    .room-header h3 {
        margin: 0;
        font-size: 16px;
        font-weight: 500;
    }

    .room-options {
        background: none;
        border: none;
        font-size: 16px;
        cursor: pointer;
        color: var(--gray-dark);
    }

    .room-content {
        position: relative;
        height: 120px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 15px;
    }

    .room-status {
        position: absolute;
        top: 10px;
        left: 10px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background-color: var(--gray-medium);
    }

    .room-status.active {
        background-color: var(--success);
    }

    .room-avatar {
        text-align: center;
    }

    .room-avatar img {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: cover;
    }

    .room-avatar-label {
        margin-top: 8px;
        font-size: 12px;
        color: var(--gray-dark);
    }

    .room-footer {
        display: flex;
        justify-content: space-between;
        padding: 10px 15px;
        background-color: #f5f5f5;
        font-size: 14px;
    }

    .room-capacity {
        color: var(--gray-dark);
    }

    .room-time {
        color: var(--gray-dark);
    }

    .room-total {
        font-size: 14px;
        color: var(--gray-medium);
        text-align: right;
    }

    /* Friends section */
    .section-container {
        padding: 20px 30px;
    }

    .section-container h2 {
        margin-bottom: 20px;
        font-size: 22px;
        font-weight: 500;
    }

    .friends-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 20px;
    }

    .friend-card {
        text-align: center;
    }

    .friend-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 10px;
    }

    .friend-name {
        display: block;
        font-size: 14px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Conversation styles */
    .conversations-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .conversation-card {
        display: flex;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 15px;
    }

    .conversation-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        object-fit: cover;
    }

    .conversation-info {
        flex: 1;
        margin-left: 15px;
    }

    .conversation-name {
        display: block;
        font-weight: 500;
        margin-bottom: 5px;
    }

    .conversation-message {
        display: block;
        font-size: 14px;
        opacity: 0.8;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 250px;
    }

    .conversation-action {
        color: white;
        padding: 8px;
    }

    /* Utilities */
    .view-all {
        display: block;
        text-align: center;
        margin-top: 20px;
        color: var(--accent);
        text-decoration: none;
    }

    .empty-state {
        text-align: center;
        padding: 20px;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        color: rgba(255, 255, 255, 0.8);
    }

    .empty-state a {
        color: var(--accent);
        text-decoration: none;
    }

    /* Responsive styles */
    @@media (max-width: 992px) {
        .dashboard-main {
            flex-direction: column;
        }
        
        .dashboard-sidebar {
            width: 100%;
            order: 2;
        }
        
        .dashboard-content {
            order: 1;
        }
        
        .room-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .dashboard-topbar {
            flex-wrap: wrap;
        }
        
        .search-container {
            order: 3;
            width: 100%;
            max-width: none;
            margin: 15px 0 0;
        }
        
        .room-grid {
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        }
        
        .friends-grid {
            grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        }
    }

    @@media (max-width: 576px) {
        .room-grid {
            grid-template-columns: 1fr 1fr;
        }
        
        .room-content {
            height: 100px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle sidebar on mobile
        const toggleSidebar = document.createElement('button');
        toggleSidebar.className = 'toggle-sidebar';
        toggleSidebar.innerHTML = '<i class="fas fa-bars"></i>';
        
        const sidebar = document.querySelector('.dashboard-sidebar');
        const topbar = document.querySelector('.dashboard-topbar');
        
        if (window.innerWidth < 992) {
            sidebar.style.display = 'none';
            topbar.prepend(toggleSidebar);
            
            toggleSidebar.addEventListener('click', function() {
                if (sidebar.style.display === 'none') {
                    sidebar.style.display = 'flex';
                } else {
                    sidebar.style.display = 'none';
                }
            });
        }
        
        // Handle room card clicks
        const roomCards = document.querySelectorAll('.room-card');
        roomCards.forEach(card => {
            card.addEventListener('click', function() {
                const roomTitle = this.querySelector('h3').textContent;
                window.location.href = `/VideoChat/Room?room=${roomTitle}`;
            });
        });
    });
</script>